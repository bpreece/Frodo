/* Generated By:JavaCC: Do not edit this line. FrodoConstants.java */
package com.bpreece.lotr;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface FrodoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int T_DEFINE = 8;
  /** RegularExpression Id. */
  int T_ABORT = 9;
  /** RegularExpression Id. */
  int T_LOG = 10;
  /** RegularExpression Id. */
  int T_FAIL = 11;
  /** RegularExpression Id. */
  int T_START = 12;
  /** RegularExpression Id. */
  int T_END = 13;
  /** RegularExpression Id. */
  int T_ELSE = 14;
  /** RegularExpression Id. */
  int T_WHILE = 15;
  /** RegularExpression Id. */
  int T_RESET = 16;
  /** RegularExpression Id. */
  int T_EMPTY = 17;
  /** RegularExpression Id. */
  int T_EQUALS = 18;
  /** RegularExpression Id. */
  int T_STARTS = 19;
  /** RegularExpression Id. */
  int T_ENDS = 20;
  /** RegularExpression Id. */
  int T_CONTAINS = 21;
  /** RegularExpression Id. */
  int T_RANGE = 22;
  /** RegularExpression Id. */
  int T_RANGE_EMPTY = 23;
  /** RegularExpression Id. */
  int T_RANGE_STARTS = 24;
  /** RegularExpression Id. */
  int T_RANGE_ENDS = 25;
  /** RegularExpression Id. */
  int T_RANGE_CONTAINS = 26;
  /** RegularExpression Id. */
  int T_RANGE_ADJUST = 27;
  /** RegularExpression Id. */
  int T_RANGE_RESET = 28;
  /** RegularExpression Id. */
  int T_PREV = 29;
  /** RegularExpression Id. */
  int T_PREV_EMPTY = 30;
  /** RegularExpression Id. */
  int T_PREV_STARTS = 31;
  /** RegularExpression Id. */
  int T_PREV_ENDS = 32;
  /** RegularExpression Id. */
  int T_PREV_CONTAINS = 33;
  /** RegularExpression Id. */
  int T_NEXT = 34;
  /** RegularExpression Id. */
  int T_NEXT_EMPTY = 35;
  /** RegularExpression Id. */
  int T_NEXT_STARTS = 36;
  /** RegularExpression Id. */
  int T_NEXT_ENDS = 37;
  /** RegularExpression Id. */
  int T_NEXT_CONTAINS = 38;
  /** RegularExpression Id. */
  int T_INSERT = 39;
  /** RegularExpression Id. */
  int T_INSERT_AFTER = 40;
  /** RegularExpression Id. */
  int T_APPEND = 41;
  /** RegularExpression Id. */
  int T_REMOVE = 42;
  /** RegularExpression Id. */
  int T_REMOVE_RANGE = 43;
  /** RegularExpression Id. */
  int T_REPLACE = 44;
  /** RegularExpression Id. */
  int T_REPLACE_FIRST = 45;
  /** RegularExpression Id. */
  int T_REPLACE_ALL = 46;
  /** RegularExpression Id. */
  int T_CATENATE = 47;
  /** RegularExpression Id. */
  int T_REWRITE = 48;
  /** RegularExpression Id. */
  int T_TO_LOWER = 49;
  /** RegularExpression Id. */
  int T_TO_UPPER = 50;
  /** RegularExpression Id. */
  int T_TRIM = 51;
  /** RegularExpression Id. */
  int T_MATCH = 52;
  /** RegularExpression Id. */
  int T_SPLIT = 53;
  /** RegularExpression Id. */
  int T_STRING = 54;
  /** RegularExpression Id. */
  int T_REGEX = 55;
  /** RegularExpression Id. */
  int T_FORMAT = 56;
  /** RegularExpression Id. */
  int T_INTEGER = 57;
  /** RegularExpression Id. */
  int T_FLOAT = 58;
  /** RegularExpression Id. */
  int T_ID = 59;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int INSIDE_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"--\"",
    "<token of kind 6>",
    "<token of kind 7>",
    "<T_DEFINE>",
    "\"abort\"",
    "\"log\"",
    "<T_FAIL>",
    "<T_START>",
    "<T_END>",
    "<T_ELSE>",
    "\"while\"",
    "\"reset\"",
    "\"empty\"",
    "<T_EQUALS>",
    "\"starts\"",
    "\"ends\"",
    "\"contains\"",
    "\"range\"",
    "\"range-empty\"",
    "\"range-starts\"",
    "\"range-ends\"",
    "\"range-contains\"",
    "\"range-adjust\"",
    "\"range-reset\"",
    "<T_PREV>",
    "\"prev-empty\"",
    "\"prev-starts\"",
    "\"prev-ends\"",
    "\"prev-contains\"",
    "<T_NEXT>",
    "\"next-empty\"",
    "\"next-starts\"",
    "\"next-ends\"",
    "\"next-contains\"",
    "<T_INSERT>",
    "\"insert-after\"",
    "<T_APPEND>",
    "<T_REMOVE>",
    "\"remove-range\"",
    "\"replace\"",
    "\"replace-first\"",
    "\"replace-all\"",
    "<T_CATENATE>",
    "\"rewrite\"",
    "\"to-lower\"",
    "\"to-upper\"",
    "\"trim\"",
    "\"match\"",
    "\"split\"",
    "<T_STRING>",
    "<T_REGEX>",
    "<T_FORMAT>",
    "<T_INTEGER>",
    "<T_FLOAT>",
    "<T_ID>",
  };

}
